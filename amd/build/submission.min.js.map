{"version":3,"file":"submission.min.js","sources":["../src/submission.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module assignsubmission_onlyoffice/submission\n * @copyright  2025 Ascensio System SIA <integration@onlyoffice.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n **/\ndefine([\n    'core/str',\n    'assignsubmission_onlyoffice/repository',\n    'assignsubmission_onlyoffice/docsapi'\n], function(Str, repository, docsapi) {\n    return {\n        init: function(documentserverurl, contextid, submissionid, readonly, format, templatetype) {\n            // First ensure the DocsAPI is loaded\n            // eslint-disable-next-line promise/always-return\n            docsapi.init(documentserverurl).then(function(DocsAPI) {\n                // eslint-disable-next-line promise/no-nesting\n                repository.buildSubmissionEditorConfig(contextid, submissionid, readonly, format, templatetype).then(config => {\n                    const editorConfig = JSON.parse(config);\n                    new DocsAPI.DocEditor('onlyoffice-editor', editorConfig);\n                    return;\n                }).catch(error => {\n                    // eslint-disable-next-line no-console\n                    console.error('Error building submission editor config:', error);\n                });\n            }).catch(function() {\n                const container = document.getElementById('app-onlyoffice');\n                if (container) {\n                    // eslint-disable-next-line promise/no-nesting\n                    Str.get_string('docserverunreachable', 'onlyofficeeditor')\n                        .then(function(string) {\n                            container.innerHTML = '<div class=\"alert alert-danger\">' + string + '</div>';\n                            return;\n                        })\n                        .catch(function(error) {\n                            // eslint-disable-next-line no-console\n                            console.error('Error getting string:', error);\n                        });\n                }\n                return;\n            });\n        }\n    };\n});\n"],"names":["define","Str","repository","docsapi","init","documentserverurl","contextid","submissionid","readonly","format","templatetype","then","DocsAPI","buildSubmissionEditorConfig","config","editorConfig","JSON","parse","DocEditor","catch","error","console","container","document","getElementById","get_string","string","innerHTML"],"mappings":";;;;;AAoBAA,gDAAO,CACH,WACA,yCACA,wCACD,SAASC,IAAKC,WAAYC,eAClB,CACHC,KAAM,SAASC,kBAAmBC,UAAWC,aAAcC,SAAUC,OAAQC,cAGzEP,QAAQC,KAAKC,mBAAmBM,MAAK,SAASC,SAE1CV,WAAWW,4BAA4BP,UAAWC,aAAcC,SAAUC,OAAQC,cAAcC,MAAKG,eAC3FC,aAAeC,KAAKC,MAAMH,YAC5BF,QAAQM,UAAU,oBAAqBH,iBAE5CI,OAAMC,QAELC,QAAQD,MAAM,2CAA4CA,aAE/DD,OAAM,iBACCG,UAAYC,SAASC,eAAe,kBACtCF,WAEArB,IAAIwB,WAAW,uBAAwB,oBAClCd,MAAK,SAASe,QACXJ,UAAUK,UAAY,mCAAqCD,OAAS,YAGvEP,OAAM,SAASC,OAEZC,QAAQD,MAAM,wBAAyBA"}